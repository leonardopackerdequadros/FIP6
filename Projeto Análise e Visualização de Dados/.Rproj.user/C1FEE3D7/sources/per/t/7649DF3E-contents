---
title: "An√°lise de Regress√£o"
format: html
editor: visual
execute: 
  error: false
  warning: false
---

A an√°lise de regress√£o √© adequada quando queremos entender e prever a rela√ß√£o entre uma vari√°vel dependente (Y) e uma ou mais vari√°veis independentes quatitativa (X). Ela envolve a constru√ß√£o de um modelo matem√°tico que descrever√° essa rela√ß√£o funcional. Existem diferentes tipos de modelos de regress√£o, como regress√£o linear simples, regress√£o linear m√∫ltipla, regress√£o n√£o linear, entre outros. Cada um desses modelos pode capturar diferentes formas de rela√ß√£o entre as vari√°veis.

#### Carregamento dos pacotes

```{r}
library(tidyverse)
library(r4pde)
library(gsheet)
library(ggthemes)
library(patchwork)
library(lme4)
library(AgroR)
library(drc)
library(ec50estimator)
library(DT)
library(stats)
```

## Regress√£o linear

A regress√£o linear √© um modelo estat√≠stico fundamental que busca descrever a rela√ß√£o linear entre uma vari√°vel dependente (Y) e uma vari√°vel independente (X). O modelo matem√°tico √© representada pela equa√ß√£o: ùëå = ùõΩ0 + ùõΩ1 ‚ãÖùëã+ œµ, onde Y √© a vari√°vel dependente (ou resposta), X √© a vari√°vel independente (ou preditora), Œ≤1 e Œ≤0 s√£o os coeficientes de intercepto e inclina√ß√£o, e œµ √© o termo de erro, que captura a varia√ß√£o n√£o explicada pelo modelo.

```{r}
## carregando o data frame
estande <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555")
datatable(estande)
```

O data frame mostra tr√™s experimentos/repeti√ß√µes, onde a vari√°vel estande √© dependente dos tratamentos.

Visualiza√ß√£o dos tr√™s Experimentos para ajustar para uma regress√£o linear usando-se o argumento method = ‚Äúlm‚Äù dentro da fun√ß√£o geom_smooth.

```{r}
theme_set(r4pde::theme_r4pde(font_size = 10))

nplants <- estande|>
  ggplot(aes(trat, nplants))+
  geom_jitter(width = 0.1, alpha = 0.5)+
  facet_wrap(~exp)+
  stat_summary(fun.data = "mean_cl_boot", size = 0.5, color = "steelblue", alpha = 0.5, size = 2)+
  geom_smooth (method = "lm", se = FALSE)
nplants
```

#### Modelo de melhor ajuste para cada experimento

```{r}
exp1<- estande|>
  filter(exp==1)

plot1 <- exp1|>
  ggplot(aes(trat, nplants))+
  geom_point()+
  ylim(0, 100)+
  geom_smooth(method = "lm", se = F)

lm1 <- lm(nplants ~trat, data = exp1)
summary(lm1)
```

```{r}
exp2<- estande|>
  filter(exp==2)

plot2 <- exp2|>
  ggplot(aes(trat, nplants))+
  geom_point()+
  ylim(0, 100)+
  geom_smooth(method = "lm", se = F)

lm2 <- lm(nplants ~trat, data = exp2)
summary(lm2)
```

```{r}
exp3<- estande|>
  filter(exp==3)

plot3 <- exp3|>
  ggplot(aes(trat, nplants))+
  geom_point()+
  ylim(0, 100)+
  geom_smooth(method = "lm", se = F)

lm3 <- lm(nplants ~trat, data = exp3)
summary(lm3)
```

```{r}
plot <- plot1|plot2|plot3
plot
```

O p-valor do tratamento no experimento 1 indica que o coeficiente angular √© igual a 0, aceitando-se assim a hip√≥tese nula. O Adjusted R-squared de 0.02928, indica o acr√©scimo na vari√°vel y em fun√ß√£o do aumento da vari√°vel x. J√° o tratamento 2 n√£o aparenta uma resposta linear ao tratamento. Desta forma podemos transformar os tratamentos em log (pois as doses s√£o crescentes), ou podemos fazer por GLM (Generalized Linear Model - GLM), com as distribui√ß√µes Gaussiana ou Poisson.

```{r}
exp2<- estande|>
  filter(exp==2)
exp2|>
  ggplot(aes(trat, nplants))+
  geom_point()+
  ylim(0, 100)+
  geom_smooth(se = FALSE)
```

## M√©todo de Regress√£o Linear Generalizada (Generalized Linear Model - GLM)

√â uma extens√£o do modelo de regress√£o linear cl√°ssico que permite modelar n√£o apenas rela√ß√µes lineares entre vari√°veis, mas tamb√©m rela√ß√µes que s√£o mais complexas e n√£o necessariamente em distribui√ß√£o gaussianas (normais), como a distribui√ß√£ de Poisson.

```{r}
## GLM com distribui√ß√£o de Poisson
glm1 <- glm(nplants ~ trat, family = "poisson", data = exp2)
summary (glm1)
AIC(glm1)
```

```{r}
## GLM com ditribui√ß√£o de Poisson com dados tranformados em log 
glm2 <- glm(nplants ~ trat, family = poisson(link = "log"), data = exp2)
summary (glm2)
AIC(glm2)
```

O modelo GLM com distribui√ß√£o de Poisson e obteve melhor ajuste, com baixo p-valor e baixo AIC. Por√©m podemo obtar em ajustes de modelos mistos, se utilizando dos tr√™s ensios de uma √∫nica vez.

## Modelo Misto

Um modelo misto de regress√£o combina elementos de modelos de regress√£o fixa e modelos de efeitos aleat√≥rios. Por exemplo, em um estudo onde as plantas s√£o agrupadas por tempo de irriga√ß√£o (fator fixo) em locais diferentes (fator aleat√≥rio) na incid√™ncia de uma doen√ßa. Isso permite modelar a estrutura hier√°rquica dos dados e obter estimativas mais precisas e interpreta√ß√µes mais robustas das rela√ß√µes entre vari√°veis. Aqui deveremos utilizar a fun√ß√£o `lmer` do pacote `lmer`

```{r}
mix <- lmer(nplants ~trat + (trat | exp),
            data = estande)
summary(mix)
```

```{r}
## outro exemplo

wn <- WhiteMoldSoybean ## data frame do pacote r4pde

mix <- lmer(inc ~treat + (treat | season),
            data = wn)

summary(mix)
```

## Regress√£o Quadr√°tica (Regress√£o linear de segunda ordem)

A regress√£o quadr√°tica √© um modelo estat√≠stico que busca descrever a rela√ß√£o quadr√°tica entre uma vari√°vel dependente (Y) e uma vari√°vel independente (X). O modelo matem√°tico √© representado pela equa√ß√£o: Y = Œ≤0 + Œ≤1 ‚ãÖ X + Œ≤2 ‚ãÖ X2 + œµ onde, Y √© a vari√°vel dependente (ou resposta), X √© a vari√°vel independente (ou preditora), Œ≤0, Œ≤1 e Œ≤1, s√£o os coeficientes de intercepto, inclina√ß√£o linear e inclina√ß√£o quadr√°tica, respectivamente, e œµ √© o termo de erro, que captura a varia√ß√£o n√£o explicada pelo modelo.

Vamos testar o experimento 2 t√™m uma tend√™ncia de n√£o ter uma resposta linear aos tratamentos

```{r}
estande <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555")

## sobreposi√ß√£o do modelo linear e quadr√°tico 
exp2 %>% 
  ggplot(aes(trat, nplants))+
  geom_point()+
  ylim(0,100)+
  geom_smooth(method = "lm",
              se = F,
              color = "steelblue",
              formula = y ~ poly(x,2))+
  geom_smooth(method = "lm",
              se = F,
              color = "#e05e00")
```

#### Utiliza√ß√£o o modelo linear

```{r}
lm2 <- lm(nplants ~ trat,
          data = exp2)

summary(lm2)
```

#### Utiliza√ß√£o o modelo quadr√°tico

Utilizar o pacote **`AgroR`** com a fun√ß√£o `polynomial`.

```{r}
exp2$trat2 <- exp2$trat^2

lm2_quad <- lm(nplants ~ trat + trat2,
               data = exp2)
summary(lm2_quad)
```

```{r}
with(exp2, polynomial(trat, nplants, grau = 2))
```

#### Compara√ß√£o dos AICs

```{r}
AIC(lm2)
AIC(lm2_quad)
```

Pelo menor AIC e maior Adjusted R-squared, o modelo quadr√°tico explica melhor a varia√ß√£o dos dados.

## Regress√£o de Terceira Ordem

Forma de regress√£o polinomial onde a rela√ß√£o entre a vari√°vel dependente Y e a vari√°vel independente X √© modelada por um polin√¥mio de grau tr√™s. Essa t√©cnica permite explicar rela√ß√µes mais complexas e curvas nos dados, oferecendo maior flexibilidade do que a regress√£o linear ou quadr√°tica.

Vamos testar o experimento 3 com um modelo de 3¬∫ grau.

```{r}
with(exp2, polynomial(trat, nplants, grau = 3))
```

Este modelo explica muito bem a varia√ß√£o dos dados, contudo n√£o possui explica√ß√£o biol√≥gica.

## Modelo de Regress√£o N√£o-Linear

A regress√£o n√£o-linear permite uma rela√ß√£o mais complexa e curva entre as vari√°veis, sendo muito utilizado na fitopatologia em curvas de EC~50~..

```{r}
fung <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")

datatable(fung)
```

```{r}
fung2 <- fung %>% 
  group_by(code, dose) %>% 
  summarise(mean_germ = mean(germination))

## Visualiza√ß√£o das m√©dias de germina√ß√£o dos isolados em fun√ß√£o das doses de fungicidas 
fung2 %>% 
  ggplot(aes(dose, mean_germ))+
  geom_point()+
  facet_wrap(~ code)
```

## Modelagem de EC~50~

Utilizaremos o pacote **`drc`**, com a fun√ß√£o `drm`. Aqui ser√° importante definir a fun√ß√£o (LL2, LL3, LL4) para comparar os modelos e selecionar aquele mais simples (com menor AIC).

```{r}
FGT05 <- fung2 %>% 
  filter(code =="FGT05")

drc_fgt05 <- drm(mean_germ ~ dose,
                 data = FGT05,
                 fct = LL.3())

summary(drc_fgt05)
AIC(drc_fgt05)
plot(drc_fgt05)
```

#### C√°culo da EC~50~

```{r}
ED(drc_fgt05, 50, interval = "delta")
```

A EC~50~ (nibe 50% da germina√ß√£o de esp√≥ros) foi estimada em 0.044839.

#### C√°lculo da EC~50~ de v√°rios amostras em apenas uma vez

Aqui utilizaremos os pacote **`ec50estimator`**. Contudo n√£o √© poss√≠vel selecionar a fun√ß√£o de cada modelo para melhor se ajustar a cada tratamento.

```{r}
df_ec50 <- estimate_EC50(mean_germ~dose,
                         data = fung2,
                         isolate_col = "code",
                         interval = "delta",
                         fct = drc::LL.3())
datatable(df_ec50)
```

#### Plots das m√©dias da EC~50~ com intervalos de confian√ßa

```{r}
df_ec50 %>% 
  ggplot(aes(reorder(ID, Estimate), Estimate))+
  geom_point()+
  geom_errorbar(aes(ymin = Lower,
                    ymax = Upper),
                width = 0.1)+
  ylim (0, 1.2)+
  coord_flip()
```
