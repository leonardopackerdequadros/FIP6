theme(legend.position = "none")
pepper |>
pivot_longer(2:4, names_to ="treat", values_to = "inc") |>
ggplot (aes(t, inc,
linetype = treat,
shape = treat,
group = treat))+
scale_color_grey()+
geom_line(linewidth = 1)+
geom_point(size =3, shape = 16)+
annotate(geom = "text", x = 15, y = 0.84, label = "1")+
annotate(geom = "text", x = 23, y = 0.6, label = "2")+
annotate(geom = "text", x = 32, y = 0.33, label = "3")+
labs(y = "Disease incidence (y)",
x = "Time (days)")+
theme(legend.position = "none")
#tabela de contingência
cr<-read_csv("https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv")
cr
# tabela de contingência
cr<-read_csv("https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv")
cr
cr|>
count(region)
cr|>
count(zone, region)
cr|>
tabyl(region, zone)
library(janitor)
install.packages("janitor")
library(janitor)
library(janitor)
cr|>
tabyl(region, zone)
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(postion = "dodge2")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(postion = "dodge2")+
scale_fill_calc()+
theme_bw()+
facet_wrap(~cultivar, scales="free_x")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(position = "dodge2")+
scale_fill_calc()+
theme_bw()+
theme(strip.text.x = element_blank())+
facet_wrap(~cultivar, scales="free_x")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(position = "dodge2")+
scale_fill_calc()+
theme_bw()+
theme(strip.)
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(position = "dodge2")+
scale_fill_calc()+
facet_wrap(~cultivar, scales="free_x")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(position = "dodge2")+
scale_fill_calc()+
theme(strip.text.x = element_blank(), legend.position = "top")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management, label = n))+
geom_col(position = "dodge2")+
theme_bw()+
theme(strip.text.x = element_blank(), legend.position = "top")+
facet_wrap(~cultivar, scales="free_x")+
geom_text(position = position_dodge(width = 0.9))
# tabela de contingência
cr<-read_csv("https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv")
cr
cr|>
count(region)
cr|>
count(zone, region)
cr<-read_csv("https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv")
cr
cr|>
count(region)
library(janitor)
#trasnformando em pecentagem a minha contagem
cr|>
tabyl(region, zone)
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(postion = "dodge2")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(postion = "dodge2")+
scale_fill_calc()+
theme_bw()+
facet_wrap(~cultivar, scales="free_x")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(position = "dodge2")+
scale_fill_calc()+
theme(strip.text.x = element_blank())+
facet_wrap(~cultivar, scales="free_x")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(position = "dodge2")+
scale_fill_calc()+
facet_wrap(~cultivar, scales="free_x")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(postion = "dodge2")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(postion = "dodge2")+
scale_fill_calc()+
facet_wrap(~cultivar, scales="free_x")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(position = "dodge2")+
scale_fill_calc()+
theme(strip.text.x = element_blank())+
facet_wrap(~cultivar, scales="free_x")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(position = "dodge2")+
scale_fill_calc()+
facet_wrap(~cultivar, scales="free_x")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(position = "dodge2")+
scale_fill_calc()+
theme(strip.text.x = element_blank(), legend.position = "top")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management, label = n))+
geom_col(position = "dodge2")+
theme_bw()+
theme(strip.text.x = element_blank(), legend.position = "top")+
facet_wrap(~cultivar, scales="free_x")+
geom_text(position = position_dodge(width = 0.9))
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management))+
geom_col(postion = "dodge2")+
scale_fill_calc()+
facet_wrap(~cultivar, scales="free_x")
cr|>
count(farm_management, cultivar)|>
ggplot(aes(cultivar, n, fill = farm_management, label = n))+
geom_col(position = "dodge2")+
theme(strip.text.x = element_blank(), legend.position = "top")+
facet_wrap(~cultivar, scales="free_x")+
geom_text(position = position_dodge(width = 0.9))
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")
mg |>
group_by (trat)|>
summarize(mean_comp = mean(comp), sd_comp = sd (comp)) |>
ggplot(aes(trat, mean_comp))+
geom_col(fill = "steelblue", width = 0.5) +
geom_errorbar(aes (ymin = mean_comp - sd_comp,
ymax = mean_comp + sd_comp), width = 0.1)+
geom_point(size = 2)+
annotate (geom = "text",
x =1, y = 17.5,
label = "*")
))+
## gráfico de barras, dados de contagem
mg |>
group_by (trat)|>
summarize(mean_comp = mean(comp), sd_comp = sd (comp)) |>
ggplot(aes(trat, mean_comp))+
geom_errorbar(aes (ymin = mean_comp - sd_comp,
ymax = mean_comp + sd_comp), width = 0.1)+
geom_point(size = 2)+
annotate (geom = "text",
x =1, y = 17.5,
label = "*")
## gráfico apenas com desvio, sem barra
mg|>
ggplot(aes(trat, comp))+
geom_jitter(width = 0.1)
mg|>
ggplot(aes(trat, comp))+
geom_jitter(width = 0.1)
## gráfico de barras, dados de contagem
mg |>
group_by (trat)|>
summarize(mean_comp = mean(comp), sd_comp = sd (comp)) |>
ggplot(aes(trat, mean_comp))+
geom_errorbar(aes (ymin = mean_comp - sd_comp,
ymax = mean_comp + sd_comp), width = 0.1)+
geom_point(size = 2)+
annotate (geom = "text",
x =1, y = 17.5,
label = "*")
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")
mg |>
group_by (trat)|>
summarize(mean_comp = mean(comp), sd_comp = sd (comp)) |>
ggplot(aes(trat, mean_comp))+
geom_col(fill = "steelblue", width = 0.5) +
geom_errorbar(aes (ymin = mean_comp - sd_comp,
ymax = mean_comp + sd_comp), width = 0.1)+
geom_point(size = 2)+
annotate (geom = "text",
x =1, y = 17.5,
label = "*")
df <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1092065531")
df <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1092065531")
df
glimpse(df)
view(df)
df_1 <- df|>
group_by(prova)|>
summarise(
mean_nota = mean (nota),
sd_nota = sd (nota),
var_nota = var (nota),
n = n (),
se_nota = (sd_nota/ sqrt (n)),
ci = se_nota * qt(0.025, df = 9))
df_1
df |>
ggplot(aes(x = as.factor(prova), y = nota)) +
geom_boxplot() +
geom_jitter(color = "steelblue", fill = "steelblue", alpha = 0.5, width = 0.15, shape = 21, stroke = 0, size = 3) +
theme_clean(base_size = 10) +
scale_y_continuous(breaks = c(0, 20, 40, 60, 80, 100), limits = c(0, 105), expand = c(0.00, 0.00)) +
labs(title = "Notas das provas de Análise de Dados", caption = "Fonte: Leonardo", x = "Prova", y = "Nota normalizada", family = "Arial", color = "black", size = 12)
library(knitr)
include_graphics("whole-game.png")
library(gsheet)
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=983033137")
mg
library (tidyverse)
mg|>
ggplot(aes(trat, comp))+
geom_boxplot()
##passar do formato ongo para largo
mg2 <- mg |>
pivot_wider(names_from = trat,
values_from = comp)
t.test (mg2$Mg2, mg2$control)
## normalidade dos resíduos
shapiro.test(mg2$control)
hist(mg2$control)
qqnorm(mg2$control)
qqline(mg2$control)
qqnorm(mg2$Mg2)
qqline(mg2$Mg2)
## normalidade dos resíduos
shapiro.test(mg2$control)
hist(mg2$control)
qqnorm(mg2$control)
qqline(mg2$control)
shapiro.test(mg2$Mg2)
qqnorm(mg2$Mg2)
qqline(mg2$Mg2)
hist(mg2$Mg2)
t.test (mg2$Mg2, mg2$control, var.equal = FALSE)
t.test (mg2$Mg2, mg2$control, var.equal = TRUE)
#OU
t.test (mg2$Mg2, mg2$control)
t.test (mg2$Mg2, mg2$control, var.equal = TRUE)
#OU
t.test (mg2$Mg2, mg2$control)
t.test (mg2$Mg2, mg2$control, var.equal = FALSE)
install.packages("report")
teste_t_1 <- t.test (mg2$Mg2, mg2$control)
library(report)
report(teste_t_1)
escala<- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1729131173")
# exploração de dados
escala|>
ggplot(aes(assessment, acuracia))+
geom_boxplot()
escala2 <- escala |>
select( assessment, rater, acuracia) |>
pivot_wider(names_from = assessment,
values_from = acuracia)
escala2 <- escala |>
select( assessment, rater, acuracia) |>
pivot_wider(names_from = assessment,
values_from = acuracia)
shapiro.test(escala2$Unaided)
shapiro.test(escala2$Aided1)
var.test(escala2$Unaided, escala2$Aided1)
# podemos proceder com teste paramétrico mesmo as variâncias não sendo heterogêneas
t.test (escala2$Unaided, escala2$Aided1, paired = TRUE,
var.equal = FALSE)
escala <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1729131173")
escala
escala2 <- escala |>
select( assessment, rater, acuracia) |>
pivot_wider(names_from = assessment,
values_from = acuracia)
## testando a normalidade e heterocedacidade
shapiro.test(escala2$Unaided)
shapiro.test(escala2$Aided1)
#rejeito a hipótese nula
wilcox.test(escala2$Aided1, escala2$Unaided, paired = TRUE)
library(ggplot2)
library(r4pde)
library(gsheet)
library(tidyverse)
esp<- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827")
theme_set(r4pde::theme_r4pde(font_size = 10))
esp |>
ggplot(aes (especie, tcm))+
geom_jitter (width = 0.05)
library(ggplot2)
library(r4pde)
library(gsheet)
library(tidyverse)
esp<- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827")
theme_set(r4pde::theme_r4pde(font_size = 10))
esp |>
ggplot(aes (especie, tcm))+
geom_jitter (width = 0.05)
m1<- lm (tcm ~especie, data =esp)
#para ver os dadso de m´dia
m1<- lm (tcm ~especie-1, data =esp)
anova (m1)
summary (m1)
library (emmeans)
##analise de comparção multipla
install.packages("emmeans")
install.packages("emmeans")
library (emmeans)
medias1 <- emmeans (m1, ~especie)
# observar os uverlaps
install.packages("multcomp")
install.packages("multcomp")
install.packages("multcompView")
# observar os uverlaps
library(multcomp)
library(multcompView)
cld (medias1)## mostra as letras
cld (medias1)## mostra as letras
# observar os uverlaps
library(multcomp)
library(multcompView)
cld (medias1)## mostra as letras
## testar a normalidade e hogeneidade
shapiro.test(m1$residuals)
bartlett(m1$residuals)
library(stats)
bartlett(m1$residuals)
install.packages("DHARMa")
install.packages("DHARMa")
library(DHARMa)
plot (simulateResiduals (m1))
report(m1)
## testar a normalidade e hogeneidade
shapiro.test(m1$residuals)
install.packages("performance")
install.packages("performance")
library(performance)
check_normality(m1)
check_heteroscedasticity(m1)
check_model(m1)
InsectSprays
?InsectSprays
inseticida<-InsectSprays
inseticida
library (tidyverse)
inseticida|>
count(spray)
inseticida|>
count(spray)
inseticida |>
ggplot(aes(x = spray, y = count)) +
geom_boxplot() +
labs(title = "", caption = "Fonte: Leonardo", x = "Spray", y = "count", family = "Arial", color = "black", size = 12)
modelo1<-lm(count ~spray, data = inseticida)
summary (modelo1)
anova(modelo1)
modelo1$residuals
hist(modelo1$residuals)
qqnorm(modelo1$residuals)
qqline(modelo1$residuals)
shapiro.test(modelo1$residuals)
bartlett.test (count ~spray, data = inseticida)
check_normality(modelo1)
check_heteroscedasticity(modelo1)
plot(simulateResiduals(modelo1))
inseticida<-inseticida|>
mutate (count2 = sqrt (count))
inseticida |>
ggplot(aes(x = spray, y = count2)) +
geom_boxplot() +
labs(title = "", caption = "Fonte: Leonardo", x = "Spray", y = "count", family = "Arial", color = "black", size = 12)
modelo2 <- lm (count2 ~spray, data = inseticida)
summary (modelo2)
anova(modelo2)
modelo1$residuals
hist(modelo2$residuals)
qqnorm(modelo2$residuals)
qqline(modelo2$residuals)
shapiro.test(modelo2$residuals)
bartlett.test (count2 ~ spray, data = inseticida)
check_normality(modelo2)
check_heteroscedasticity(modelo2)
plot(simulateResiduals(modelo2))
#Estatística agora com os dados tranformados
library(emmeans)
modelo2_medias<-emmeans(modelo2, ~spray)
plot(modelo2_medias)
library(multcomp)
cld(modelo2_medias)
pwpm(modelo2_medias)
pwpm
pwpm(modelo2_medias)
pwpm
install.packages("agricolae")
library (agricolae)
kruskal.test(count ~ spray, data = inseticida)
modelo3 <- kruskal(inseticida$count, inseticida$spray, group = TRUE)
modelo3
##alternativa 3 - GLMs
modelo4 <- glm(count ~spray, family = gaussian, data= inseticida)
modelo4
modelo4 <- glm(count ~spray, family = poisson, data= inseticida)
modelo4
anova(modelo4)
library(car)
Anova(modelo4)
plot(simulateResiduals (modelo4))
check_nomality(modelo4)
library(car)
Anova(modelo4)
plot(simulateResiduals (modelo4))
check_nomality(modelo4)
modelo4_medias <- emmeans(modelo4, ~spray, type = "response")
modelo4_medias
cld(modelo4_medias)
install.packages("MASS")
install.packages("MASS")
library(MASS)
b<-boxcox(lm(inseticida$count+ 0.1 ~1))
lambda <- b$x[which.max(b$y)]
lambda
inseticida$count3<-(inseticida$count ^ lambda -1) / lambda
inseticida$count3
mf<-lm(severity ~treat*dose, data = li)
mf<-lm(severity ~treat*dose, data = li)
soja <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711")
#preciso determinar os fatores
soja <- soja |>
mutate (TRAT = as.factor(TRAT),
Bloco = as.factor(BLOCO))
dfc <- soja|>
ggplot(aes(TRAT, DFC))+
geom_jitter (width = 0.1)
dfc
library(patchwork)
dfc|fer|prod
fer <- soja|>
ggplot(aes(TRAT, DFC))+
geom_jitter (width = 0.1)
fer
prod <- soja|>
ggplot(aes(TRAT, PROD))+
geom_jitter (width = 0.1)
prod
library(patchwork)
dfc|fer|prod
## plot intervalo de confiança
install.packages("Hmisc")
install.packages("Hmisc")
## plot intervalo de confiança
library(Hmisc)
dfc <- soja |>
ggplot (aes (TRAT, DFC))+
geom_jitter (width = 0.1, color = "gray70") +
stat_summary(fun.data = "mean_cl_boot", color = "black", alpha = 0.5)
dfc
## Anova DFC
aov_dfc <-lm(DFC ~TRAT + BLOCO, data = soja)
anova(aov_dfc)
check_heteroscedasticity(aov_dfc)
check_normality(aov_dfc)
cld(medias_dfc, Letters = LETTERS)
medias_dfc <- emmeans(aov_dfc, ~TRAT)
medias_dfc
cld(medias_dfc, Letters = LETTERS)
aov_fer <-lm(FER ~TRAT + BLOCO, data = soja)
anova(aov_fer)
check_heteroscedasticity(aov_fer)
check_normality(aov_fer)
#tranSformar
aov_fer<- lm (log(FER) ~TRAT + BLOCO, data = soja)
anova(aov_fer)
check_heteroscedasticity(aov_fer)
check_normality(aov_fer)
