---
title: "Teste de Hipótese para Múltiplos Grupos"
format: html
editor: visual
execute: 
  error: false
  warning: false
---

## Análise Paramétrica 

## ANOVA 

A ANOVA é usada para comparar as médias de três ou mais grupos. Ela determina se há pelo menos uma diferença significativa entre as médias de vários grupos.

### Exemplo 1
```{r}
library(ggplot2)
library(r4pde)
library(gsheet)
library(tidyverse)

esp<- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=959387827")

theme_set(r4pde::theme_r4pde(font_size = 10))

esp |> 
  ggplot(aes (especie, tcm))+
  geom_jitter (width = 0.05)

## criando o objeto 
m1<- lm (tcm ~especie, data =esp)
m1<- lm (tcm ~especie-1, data =esp)

anova (m1) ## Houve diferença estatística
summary (m1)

library (emmeans)
medias1 <- emmeans (m1, ~especie)

# observar os uverlaps 
library(multcomp)
library(multcompView)

cld (medias1)## mostra as letras 

## testar a normalidade e hogeneidade
shapiro.test(m1$residuals)

library(DHARMa)
plot (simulateResiduals (m1))

library(performance)
check_normality(m1)
check_heteroscedasticity(m1)
check_model(m1)
```

### Exemplo 2 

```{r}
inseticida<-InsectSprays

library (tidyverse)

inseticida|>
  count(spray)

inseticida |> 
  ggplot(aes(x = spray, y = count)) +
  geom_boxplot() +
  labs(title = "", caption = "Fonte: Leonardo", x = "Spray", y = "count", family = "Arial", color = "black", size = 12)

modelo1<-lm(count ~spray, data = inseticida)
summary (modelo1)
anova(modelo1) 

modelo1$residuals
hist(modelo1$residuals)
qqnorm(modelo1$residuals)
qqline(modelo1$residuals)
shapiro.test(modelo1$residuals)
bartlett.test (count ~spray, data = inseticida)

check_normality(modelo1)
check_heteroscedasticity(modelo1)

plot(simulateResiduals(modelo1))
```

Houve diferença estatística entre as médias dos tratamentos, contudo não houve hogenedidade das variâncias. 

### Primeira opção - Transformação dos dados 

#### Tranformação por log 

```{r}
inseticida<-inseticida|> 
  mutate (count2 = sqrt (count))

inseticida |> 
  ggplot(aes(x = spray, y = count2)) +
  geom_boxplot() +
  labs(title = "", caption = "Fonte: Leonardo", x = "Spray", y = "count", family = "Arial", color = "black", size = 12)
 
 
modelo2 <- lm (count2 ~spray, data = inseticida)
summary (modelo2)
anova(modelo2)


modelo1$residuals

hist(modelo2$residuals)

qqnorm(modelo2$residuals)
qqline(modelo2$residuals)

shapiro.test(modelo2$residuals)
bartlett.test (count2 ~ spray, data = inseticida)

check_normality(modelo2)
check_heteroscedasticity(modelo2)

plot(simulateResiduals(modelo2))
```

```{r}
modelo1<-lm(count ~spray, data = inseticida)
summary (modelo1)
anova(modelo1)


modelo1$residuals
hist(modelo1$residuals)
qqnorm(modelo1$residuals)
qqline(modelo1$residuals)
shapiro.test(modelo1$residuals)
bartlett.test (count ~spray, data = inseticida)

check_normality(modelo1)
check_heteroscedasticity(modelo1)

plot(simulateResiduals(modelo1))

library(emmeans)
modelo1_medias<-emmeans(modelo1, ~spray)
plot(modelo1_medias)

library(multcomp)
cld(modelo1_medias)

pwpm(modelo1_medias)
pwpp (modelo1_medias)
pairs(modelo1_medias)

#Estatística agora com os dados tranformados 
library(emmeans)
modelo2_medias<-emmeans(modelo2, ~spray)
plot(modelo2_medias)

library(multcomp)
cld(modelo2_medias)
pwpm(modelo2_medias)

```

#### Tranformação por Box Cox

```{r}
library(MASS)

b<-boxcox(lm(inseticida$count+ 0.1 ~1))
lambda <- b$x[which.max(b$y)]
lambda

inseticida$count3<-(inseticida$count ^ lambda -1) / lambda
inseticida$count3
```

Com a tranformação de raíz os dados atenderam as pressuposições da ANOVA. 

### Segunda opção - Usar um teste não paramétrico 

## Análise Não-Paramétrica 

## Teste Kruskal-Wallis

```{r}
library (agricolae)

kruskal.test(count ~ spray, data = inseticida)

modelo3 <- kruskal(inseticida$count, inseticida$spray, group = TRUE)
modelo3
```

### GLM (Generalized Linear Model, ou Modelo Linear Generalizado)

```{r}
##alternativa 3 - GLMs 
modelo4 <- glm(count ~spray, family = gaussian, data= inseticida)
modelo4

modelo4 <- glm(count ~spray, family = poisson, data= inseticida)
modelo4
anova(modelo4)

library(car)
Anova(modelo4)

plot(simulateResiduals (modelo4))

modelo4_medias <- emmeans(modelo4, ~spray, type = "response")
modelo4_medias 
cld(modelo4_medias)
```
## Anova em Blocos Casualizados 

```{r}
soja <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711")

#preciso determinar os fatores 
soja <- soja |>
  mutate (TRAT = as.factor(TRAT),
          Bloco = as.factor(BLOCO))

dfc <- soja|>
  ggplot(aes(TRAT, DFC))+
  geom_jitter (width = 0.1)

fer <- soja|>
  ggplot(aes(TRAT, DFC))+
  geom_jitter (width = 0.1)
  
prod <- soja|>
  ggplot(aes(TRAT, PROD))+
  geom_jitter (width = 0.1)
  

library(patchwork)
dfc|fer|prod

## plot intervalo de confiança 
library(Hmisc)

dfc <- soja |>
  ggplot (aes (TRAT, DFC))+
  geom_jitter (width = 0.1, color = "gray70") + 
  stat_summary(fun.data = "mean_cl_boot", color = "black", alpha = 0.5)
dfc

## Anova DFC
aov_dfc <-lm(DFC ~TRAT + BLOCO, data = soja)
anova(aov_dfc)

check_heteroscedasticity(aov_dfc)
check_normality(aov_dfc)

medias_dfc <- emmeans(aov_dfc, ~TRAT)
medias_dfc

cld(medias_dfc, Letters = LETTERS)

## Anova FER

aov_fer <-lm(FER ~TRAT + BLOCO, data = soja)
anova(aov_fer)

check_heteroscedasticity(aov_fer)
check_normality(aov_fer)

#tranSformar
aov_fer<- lm (log(FER) ~TRAT + BLOCO, data = soja)
anova(aov_fer)

check_heteroscedasticity(aov_fer)
check_normality(aov_fer)
```

